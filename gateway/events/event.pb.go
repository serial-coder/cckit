// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.13.0
// source: events/event.proto

package events

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	peer "github.com/hyperledger/fabric-protos-go/peer"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_events_event_proto protoreflect.FileDescriptor

var file_events_event_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x65, 0x65, 0x72, 0x2f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0x61, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x37, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_events_event_proto_goTypes = []interface{}{
	(*empty.Empty)(nil),         // 0: google.protobuf.Empty
	(*peer.ChaincodeEvent)(nil), // 1: protos.ChaincodeEvent
}
var file_events_event_proto_depIdxs = []int32{
	0, // 0: events.ChaincodeEvent.EventStream:input_type -> google.protobuf.Empty
	1, // 1: events.ChaincodeEvent.EventStream:output_type -> protos.ChaincodeEvent
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_events_event_proto_init() }
func file_events_event_proto_init() {
	if File_events_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_events_event_proto_goTypes,
		DependencyIndexes: file_events_event_proto_depIdxs,
	}.Build()
	File_events_event_proto = out.File
	file_events_event_proto_rawDesc = nil
	file_events_event_proto_goTypes = nil
	file_events_event_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChaincodeEventClient is the client API for ChaincodeEvent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChaincodeEventClient interface {
	EventStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChaincodeEvent_EventStreamClient, error)
}

type chaincodeEventClient struct {
	cc grpc.ClientConnInterface
}

func NewChaincodeEventClient(cc grpc.ClientConnInterface) ChaincodeEventClient {
	return &chaincodeEventClient{cc}
}

func (c *chaincodeEventClient) EventStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChaincodeEvent_EventStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChaincodeEvent_serviceDesc.Streams[0], "/events.ChaincodeEvent/EventStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chaincodeEventEventStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChaincodeEvent_EventStreamClient interface {
	Recv() (*peer.ChaincodeEvent, error)
	grpc.ClientStream
}

type chaincodeEventEventStreamClient struct {
	grpc.ClientStream
}

func (x *chaincodeEventEventStreamClient) Recv() (*peer.ChaincodeEvent, error) {
	m := new(peer.ChaincodeEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChaincodeEventServer is the server API for ChaincodeEvent service.
type ChaincodeEventServer interface {
	EventStream(*empty.Empty, ChaincodeEvent_EventStreamServer) error
}

// UnimplementedChaincodeEventServer can be embedded to have forward compatible implementations.
type UnimplementedChaincodeEventServer struct {
}

func (*UnimplementedChaincodeEventServer) EventStream(*empty.Empty, ChaincodeEvent_EventStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method EventStream not implemented")
}

func RegisterChaincodeEventServer(s *grpc.Server, srv ChaincodeEventServer) {
	s.RegisterService(&_ChaincodeEvent_serviceDesc, srv)
}

func _ChaincodeEvent_EventStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChaincodeEventServer).EventStream(m, &chaincodeEventEventStreamServer{stream})
}

type ChaincodeEvent_EventStreamServer interface {
	Send(*peer.ChaincodeEvent) error
	grpc.ServerStream
}

type chaincodeEventEventStreamServer struct {
	grpc.ServerStream
}

func (x *chaincodeEventEventStreamServer) Send(m *peer.ChaincodeEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _ChaincodeEvent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.ChaincodeEvent",
	HandlerType: (*ChaincodeEventServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventStream",
			Handler:       _ChaincodeEvent_EventStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "events/event.proto",
}
